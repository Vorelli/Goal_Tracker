!function(e){var t={};function n(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(a,o,function(t){return e[t]}.bind(null,o));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([,function(e,t,n){"use strict";function a(e){if(arguments.length<1)throw new TypeError("1 argument required, but only "+arguments.length+" present");var t=Object.prototype.toString.call(e);return e instanceof Date||"object"==typeof e&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function o(e,t){if(arguments.length<2)throw new TypeError("2 arguments required, but only "+arguments.length+" present");var n=a(e),o=a(t),r=n.getTime()-o.getTime();return r<0?-1:r>0?1:r}n.r(t);var r=function(e,t,n,a,r,s=[]){const u=this;i(e,t,n,a,r,s);function l(){let e=[];return u.subTasks.forEach(t=>{e.push(t.getTaskData())}),e}function i(e,t,n,a,o,r){u.name=e,u.dateA=t,u.dateToBeC=n,u.dateC=a,u.completionStatus=o,u.subTasks=r}return{toggleCompletion:function(){u.completionStatus=!r},onTrack:()=>{o(new Date,u.dateToBeC)},edit:i,getTaskData:function(){return{name:u.name,dateA:u.dateA,dateToBeC:u.dateToBeC,dateC:u.dateC,completionStatus:u.completionStatus,subTasks:l()}},addSubTask:function(e){s.push(e)},hasSubTasks:()=>u.subTasks.isEmpty(),getSubTasks:()=>u.subTasks,setCompletionStatus:e=>u.completionStatus=e}};var s=function(e,t,n,a,o,r=[]){const s=this;function u(){let e=[];for(let t=0;t<s.goals.length;t++)e.push(s.goals[t].getGoalData());return e}function l(e){for(let t=0;t<s.goals.length;t++)if(s.goals[t].getGoalData().name==e)return t;return-1}function i(e,t,n,a,o,r){s.name=e,s.desc=t,s.dateA=n,s.dateC=a,s.completionStatus=o,s.goals=r}return i(e,t,n,a,o,r),{getAmbitionData:function(){return{name:s.name,desc:s.desc,dateA:s.dateA,dateToBeC:s.dateToBeC,dateC:s.dateC,completionStatus:s.completionStatus,goals:u()}},edit:i,addGoal:function(e){l(-1==e.getGoalData().name)&&s.goals.push(e)},remGoal:function(e){return s.goals.splice(e,1)},findGoalByName:l,completeGoal:function(e){s.goals[e].setAllTasksCompletion(!0)}}};let u=new function(e,t,n,a,r,s,u=[]){const l=this;function i(){let e=[];return l.tasks.forEach(t=>{e.push(t.getTaskData())}),e}function c(e){for(let t=0;t<l.tasks.length;t++)if(l.tasks[t].getTaskData().name==e)return t;return-1}function d(e){l.completionStatus=e,u.forEach(t=>{t.setCompletionStatus(e)})}function f(e,t,n,a,o,r,s=[]){l.name=e,l.desc=t,l.dateA=n,l.dateToBeC=a,l.dateC=o,l.completionStatus=r,l.tasks=s}return f(e,t,n,a,r,s,u),{getGoalData:function(){return{name:l.name,desc:l.desc,dateA:l.dateA,dateToBeC:l.dateToBeC,dateC:l.dateC,completionStatus:l.completionStatus,tasks:i()}},edit:f,expectedProgress:function(){if((new Date).getTime()<l.dateA.getTime())return 0;let e=(new Date).getTime()-l.dateA.getTime(),t=l.dateToBeC.getTime()-l.dateA.getTime();return 1!=o(new Date,l.dateToBeC)?e/t:1},addTask:function(e){-1==c(e.name)&&l.tasks.push(e)},toggleCompletion:function(){l.completionStatus&&(u.forEach(e=>{if(!e.getTaskData().completionStatus)return!1}),1)?d(!1):d(!0)},setAllTasksCompletion:d,findTaskByName:c,remTask:function(e){return l.tasks.splice(e,1)}}}("Reach Gold in Mythic League on Faceit","a",new Date(2019,11,20),new Date(2020,0,1),null,!1);console.log(u.getGoalData()),console.log(u.expectedProgress()),u.addTask(new r("Reach lvl 8 on Faceit",new Date(2019,11,20),new Date(2020,0,15),null,!1,[new r("Reach lvl 6 on Faceit",new Date(2019,11,20),new Date(2020,0,15),null,!1),new r("Reach lvl 7 on Faceit",new Date(2019,11,20),new Date(2020,0,15),null,!1)])),console.log(u.getGoalData()),console.log(u.getGoalData().tasks);let l=new s("Go Pro in CS:GO","",new Date(2019,6,4),new Date(2020,5,4),null,!1,[u]);console.log(l.getAmbitionData())}]);